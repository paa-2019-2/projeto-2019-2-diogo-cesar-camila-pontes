(bubblesort
 (bubbling_TCC1 0
  (bubbling_TCC1-1 nil 3781979208 ("" (subtype-tcc) nil nil) nil nil
   (bubbling subtype "bubblesort.l" "(list_adt[nat].cons?)")))
 (bubbling_TCC2 0
  (bubbling_TCC2-1 nil 3781979208 ("" (subtype-tcc) nil nil) nil nil
   (bubbling subtype "list_adt[nat].cdr(bubblesort.l)"
    "(list_adt[nat].cons?)")))
 (bubbling_TCC3 0
  (bubbling_TCC3-1 nil 3781979208 ("" (subtype-tcc) nil nil) nil nil
   (bubbling subtype "(number_fields.-)(bubblesort.n, 1)"
    "below[list2finseq[nat](cons[nat](car[nat](l), cdr[nat](cdr[nat](l))))`length]")))
 (bubbling_TCC4 0
  (bubbling_TCC4-1 nil 3781979208 ("" (termination-tcc) nil nil) nil
   nil
   (bubbling termination
    "bubblesort.bubbling(list_adt[nat].cons(list_adt[nat].car(bubblesort.l), list_adt[nat].cdr(list_adt[nat].cdr(bubblesort.l))), (number_fields.-)(bubblesort.n, 1))"
    "nil")))
 (bubbling_TCC5 0
  (bubbling_TCC5-1 nil 3781979208 ("" (subtype-tcc) nil nil) nil nil
   (bubbling subtype "(number_fields.-)(bubblesort.n, 1)"
    "below[list2finseq[nat](cdr[nat](l))`length]")))
 (bubbling_TCC6 0
  (bubbling_TCC6-1 nil 3781979208 ("" (termination-tcc) nil nil) nil
   nil
   (bubbling termination
    "bubblesort.bubbling(list_adt[nat].cdr(bubblesort.l), (number_fields.-)(bubblesort.n, 1))"
    "nil")))
 (bubblesort_aux_TCC1 0
  (bubblesort_aux_TCC1-1 nil 3781979208 ("" (subtype-tcc) nil nil) nil
   nil
   (bubblesort_aux subtype "(number_fields.-)(bubblesort.n, 1)"
    "below[list2finseq[nat](bubbling(l, n))`length]")))
 (bubblesort_aux_TCC2 0
  (bubblesort_aux_TCC2-1 nil 3781979208 ("" (termination-tcc) nil nil)
   nil nil
   (bubblesort_aux termination
    "bubblesort.bubblesort_aux(bubblesort.bubbling(bubblesort.l, bubblesort.n), (number_fields.-)(bubblesort.n, 1))"
    "nil")))
 (bubblesort_TCC1 0
  (bubblesort_TCC1-1 nil 3781979208 ("" (subtype-tcc) nil nil) nil nil
   (bubblesort subtype
    "(number_fields.-)(list2finseq[nat].list2finseq(bubblesort.l)`length, 1)"
    "below[list2finseq[nat](l)`length]")))
 (bubblesort_aux_count_TCC1 0
  (bubblesort_aux_count_TCC1-1 nil 3781979208
   ("" (subtype-tcc) nil nil) nil nil
   (bubblesort_aux_count subtype "(number_fields.-)(bubblesort.n, 1)"
    "below[list2finseq[nat](aux`1)`length]")))
 (bubbling_length 0
  (bubbling_length-1 nil 3783377020
   ("" (measure-induct "length(l)" "l")
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (expand bubbling_count 1)
            (("" (lift-if)
              (("" (prop)
                (("1" (inst -2 "cons(car(x), cdr(cdr(x)))")
                  (("1" (split)
                    (("1" (inst -1 "n-1")
                      (("1" (inst -1 c)
                        (("1" (expand length 1 1)
                          (("1" (expand length -1 2)
                            (("1" (expand length 1 2)
                              (("1"
                                (lift-if)
                                (("1"
                                  (prop)
                                  (("1"
                                    (typepred n)
                                    (("1" (grind) nil nil))
                                    nil)
                                   ("2"
                                    (hide -2)
                                    (("2"
                                      (expand length 2 2)
                                      (("2"
                                        (lift-if)
                                        (("2"
                                          (prop)
                                          (("1"
                                            (typepred n)
                                            (("1" (grind) nil nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (typepred n)
                        (("2" (expand list2finseq)
                          (("2" (assert) nil nil)) nil))
                        nil))
                      nil)
                     ("2" (hide -1 2)
                      (("2" (expand length)
                        (("2" (lift-if)
                          (("2" (prop)
                            (("1" (typepred n) (("1" (grind) nil nil))
                              nil)
                             ("2" (expand length 2 2)
                              (("2"
                                (lift-if)
                                (("2"
                                  (prop)
                                  (("1"
                                    (typepred n)
                                    (("1" (grind) nil nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 1)
                  (("2" (inst -1 "cdr(x)")
                    (("2" (split)
                      (("1" (inst -1 "n-1" c)
                        (("1" (expand length 1)
                          (("1" (lift-if)
                            (("1" (prop)
                              (("1"
                                (typepred n)
                                (("1" (grind) nil nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil))
                          nil)
                         ("2" (typepred n)
                          (("2" (expand list2finseq)
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil)
                       ("2" (expand length 1 2)
                        (("2" (lift-if)
                          (("2" (prop)
                            (("1" (typepred n) (("1" (grind) nil nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((length def-decl "nat" list_props nil)) shostak))
 (bubbling_equiv 0
  (bubbling_equiv-1 nil 3782581648
   ("" (measure-induct "length(l)" "l" 1)
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (expand bubbling 1)
            (("" (expand bubbling_count 1)
              (("" (lift-if)
                (("" (prop)
                  (("1" (inst -2 "cons(car(x), cdr(cdr(x)))")
                    (("1" (split)
                      (("1" (inst -1 "n-1" "c")
                        (("1" (assert) nil nil)
                         ("2" (typepred n)
                          (("2" (expand list2finseq)
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil)
                       ("2" (expand length 1 2)
                        (("2" (lift-if)
                          (("2" (prop)
                            (("1" (typepred n) (("1" (grind) nil nil))
                              nil)
                             ("2" (expand length 2 1)
                              (("2"
                                (expand length 2 2)
                                (("2"
                                  (lift-if)
                                  (("2"
                                    (prop)
                                    (("1"
                                      (typepred n)
                                      (("1" (grind) nil nil))
                                      nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (inst -1 "cdr(x)")
                    (("2" (split)
                      (("1" (inst -1 "n-1" "c")
                        (("1" (assert) nil nil)
                         ("2" (typepred n) (("2" (grind) nil nil))
                          nil))
                        nil)
                       ("2" (expand length 1 2)
                        (("2" (lift-if)
                          (("2" (prop)
                            (("1" (typepred n) (("1" (grind) nil nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((length def-decl "nat" list_props nil)) shostak))
 (bubblesort_aux_equiv 0
  (bubblesort_aux_equiv-1 nil 3782583347
   ("" (measure-induct "length(l) + n" ("l" "n"))
    (("" (skeep)
      (("" (skeep)
        (("" (expand bubblesort_aux 1)
          (("" (expand bubblesort_aux_count 1)
            (("" (lift-if)
              (("" (prop)
                (("" (inst -1 "bubbling_count(x_1, c, x_2)`1" "x_2-1")
                  (("1" (split)
                    (("1" (inst -1 "bubbling_count(x_1, c, x_2)`2")
                      (("1" (lemma bubbling_equiv)
                        (("1" (inst -1 x_1 x_2 c)
                          (("1" (assert) nil nil)) nil))
                        nil))
                      nil)
                     ("2" (lemma bubbling_length)
                      (("2" (inst -1 x_1 x_2 c)
                        (("2" (assert) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (typepred x_2)
                    (("2" (hide 3) (("2" (grind) nil nil)) nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((pred type-eq-decl nil defined_types nil)
    (well_founded? const-decl "bool" orders nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil)
    (measure_induction formula-decl nil measure_induction nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (list type-decl nil list_adt nil) (< const-decl "bool" reals nil)
    (PRED type-eq-decl nil defined_types nil)
    (every adt-def-decl "boolean" list_adt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (below type-eq-decl nil nat_types nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (list2finseq const-decl "finseq[T]" list2finseq nil)
    (naturalnumber type-eq-decl nil naturalnumbers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (length def-decl "nat" list_props nil)
    (wf_nat formula-decl nil naturalnumbers nil)
    (bubblesort_aux_count def-decl "[list[nat], nat]" bubblesort nil)
    (bubblesort_aux def-decl "list[nat]" bubblesort nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bubbling_equiv formula-decl nil bubblesort nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (bubbling_length formula-decl nil bubblesort nil)
    (bubbling_count def-decl "[list[nat], nat]" bubblesort nil)
    (x_2 skolem-const-decl "below[list2finseq(x_1)`length]" bubblesort
     nil)
    (x_1 skolem-const-decl "list[nat]" bubblesort nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil))
   shostak))
 (bubblesort_equiv 0
  (bubblesort_equiv-1 nil 3782582192
   ("" (induct "l")
    (("1" (expand "bubblesort")
      (("1" (expand "bubblesort_count") (("1" (propax) nil nil)) nil))
      nil)
     ("2" (skeep)
      (("2" (lemma "bubblesort_aux_equiv")
        (("2" (expand "bubblesort")
          (("2" (expand "bubblesort_count")
            (("2" (lift-if)
              (("2" (prop)
                (("1"
                  (inst -2 "cons(cons1_var, cons2_var)"
                   "list2finseq(cons(cons1_var, cons2_var))`length - 1"
                   "0")
                  (("1" (grind) nil nil)) nil)
                 ("2"
                  (inst -2 "cons(cons1_var, cons2_var)"
                   "list2finseq(cons(cons1_var, cons2_var))`length - 1"
                   "0")
                  (("2" (grind) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((length def-decl "nat" list_props nil)) shostak))
 (bubbling_counts_n 0
  (bubbling_counts_n-2 "measure induct" 3783219903
   ("" (measure-induct "length(l)" "l")
    (("" (skeep)
      (("" (skeep)
        (("" (skeep)
          (("" (expand bubbling_count 1)
            (("" (lift-if)
              (("" (prop)
                (("1" (assert) nil nil)
                 ("2" (inst -2 "cons(car(x), cdr(cdr(x)))")
                  (("2" (split)
                    (("1" (inst -1 "n-1" "c")
                      (("1" (assert) nil nil)
                       ("2" (typepred "n") (("2" (grind) nil nil))
                        nil))
                      nil)
                     ("2" (grind)
                      (("2" (expand length 1 2)
                        (("2" (lift-if)
                          (("2" (prop)
                            (("1" (typepred n) (("1" (grind) nil nil))
                              nil)
                             ("2" (expand length 2 2)
                              (("2"
                                (lift-if)
                                (("2"
                                  (prop)
                                  (("1"
                                    (typepred n)
                                    (("1"
                                      (assert)
                                      (("1" (assert) nil nil))
                                      nil))
                                    nil)
                                   ("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("3" (inst -1 "cdr(x)")
                  (("3" (split)
                    (("1" (inst -1 "n-1" "c")
                      (("1" (assert) nil nil)
                       ("2" (typepred "n") (("2" (assert) nil nil))
                        nil))
                      nil)
                     ("2" (expand length 1 2)
                      (("2" (lift-if)
                        (("2" (prop)
                          (("1" (typepred n) (("1" (grind) nil nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((length def-decl "nat" list_props nil)) shostak)
  (bubbling_counts_n-1 nil 3783217767
   ("" (induct l)
    (("1" (skeep)
      (("1" (skeep)
        (("1" (expand bubbling_count)
          (("1" (typepred "n")
            (("1" (lift-if)
              (("1" (prop)
                (("1" (assert) nil nil) ("2" (grind) nil nil)
                 ("3" (grind) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (skeep)
      (("2" (induct "n")
        (("1" (flatten)
          (("1" (skeep)
            (("1" (expand bubbling_count 1) (("1" (propax) nil nil))
              nil))
            nil))
          nil)
         ("2" (skeep)
          (("2" (skeep)
            (("2" (expand bubbling_count 1)
              (("2" (lift-if)
                (("2" (prop)
                  (("1" (expand bubbling_count -3)
                    (("1" (inst -3 "c")
                      (("1" (lift-if)
                        (("1" (prop)
                          (("1" (grind) nil nil)
                           ("2" (postpone) nil nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (inst -3 jb)
                    (("2" (inst -3 c) (("2" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (bubbling_linear 0
  (bubbling_linear-1 nil 3783306693
   ("" (skeep)
    (("" (skeep)
      (("" (lemma "bubbling_counts_n")
        (("" (inst?)
          (("" (typepred n)
            (("" (expand list2finseq) (("" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (bubaux_counts_n2_TCC1 0
  (bubaux_counts_n2_TCC1-1 nil 3783378374 ("" (subtype-tcc) nil nil)
   nil nil
   (bubaux_counts_n2 subtype "2"
    "{i: integers.int | booleans.OR(bubblesort.n /= 0, reals.>=(i, 0))}")))
 (bubaux_counts_n2 0
  (bubaux_counts_n2-1 nil 3783360294
   ("" (measure-induct "length(l) + n" ("l" "n"))
    (("" (skeep)
      (("" (skeep)
        (("" (expand bubblesort_aux_count 1)
          (("" (lift-if)
            (("" (prop)
              (("1" (hide -2) (("1" (grind) nil nil)) nil)
               ("2" (inst -1 "bubbling_count(x_1, c, x_2)`1" "x_2-1")
                (("1" (split)
                  (("1" (inst -1 "bubbling_count(x_1, c, x_2)`2")
                    (("1" (assert)
                      (("1" (lemma bubbling_counts_n)
                        (("1" (inst -1 x_1 x_2 c)
                          (("1" (grind) nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2 3)
                    (("2" (lemma bubbling_length)
                      (("2" (inst -1 x_1 x_2 c)
                        (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (typepred x_2) (("2" (grind) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((length def-decl "nat" list_props nil)) shostak))
 (bubblesort_counts_n2_TCC1 0
  (bubblesort_counts_n2_TCC1-1 nil 3783309359
   ("" (subtype-tcc) nil nil) nil nil
   (bubblesort_counts_n2 subtype "2"
    "{i: integers.int | booleans.OR(list_props[nat].length(bubblesort.l) /= 0, reals.>=(i, 0))}")))
 (bubblesort_counts_n2 0
  (bubblesort_counts_n2-1 nil 3783306500
   ("" (skeep)
    (("" (expand bubblesort_count)
      (("" (lift-if)
        (("" (prop)
          (("1" (grind) nil nil)
           ("2" (lemma bubaux_counts_n2)
            (("2" (expand list2finseq)
              (("2" (inst -1 l "length(l)-1" 0)
                (("1" (grind) nil nil) ("2" (grind) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((length def-decl "nat" list_props nil)) shostak)))


(bubblesort
 (bubbling_TCC1 0
  (bubbling_TCC1-1 nil 3781979208 ("" (subtype-tcc) nil nil) nil nil))
 (bubbling_TCC2 0
  (bubbling_TCC2-1 nil 3781979208 ("" (subtype-tcc) nil nil) nil nil))
 (bubbling_TCC3 0
  (bubbling_TCC3-1 nil 3781979208 ("" (subtype-tcc) nil nil) nil nil))
 (bubbling_TCC4 0
  (bubbling_TCC4-1 nil 3781979208 ("" (termination-tcc) nil nil) nil
   nil))
 (bubbling_TCC5 0
  (bubbling_TCC5-1 nil 3781979208 ("" (subtype-tcc) nil nil) nil nil))
 (bubbling_TCC6 0
  (bubbling_TCC6-1 nil 3781979208 ("" (termination-tcc) nil nil) nil
   nil))
 (bubblesort_aux_TCC1 0
  (bubblesort_aux_TCC1-1 nil 3781979208 ("" (subtype-tcc) nil nil) nil
   nil))
 (bubblesort_aux_TCC2 0
  (bubblesort_aux_TCC2-1 nil 3781979208 ("" (termination-tcc) nil nil)
   nil nil))
 (bubblesort_TCC1 0
  (bubblesort_TCC1-1 nil 3781979208 ("" (subtype-tcc) nil nil) nil
   nil))
 (bubblesort_aux_count_TCC1 0
  (bubblesort_aux_count_TCC1-1 nil 3781979208
   ("" (subtype-tcc) nil nil) nil nil))
 (bubblesort_aux_count_TCC2 0
  (bubblesort_aux_count_TCC2-1 nil 3781979208
   ("" (termination-tcc) nil nil) nil nil))
 (bubbling_equiv 0
  (bubbling_equiv-1 nil 3782581648
   ("" (induct "l")
    (("1" (skeep)
      (("1" (skeep)
        (("1" (expand "bubbling")
          (("1" (expand "bubbling_count")
            (("1" (lift-if)
              (("1" (prop)
                (("1" (postpone) nil nil) ("2" (postpone) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (postpone) nil nil))
    nil)
   nil shostak))
 (bubblesort_aux_equiv 0
  (bubblesort_aux_equiv-1 nil 3782583347
   ("" (induct "l")
    (("1" (skeep)
      (("1" (skeep)
        (("1" (expand "bubblesort_aux")
          (("1" (expand "bubblesort_aux_count")
            (("1" (lift-if)
              (("1" (prop)
                (("1" (lemma "bubbling_equiv")
                  (("1" (inst?)
                    (("1" (typepred "n") (("1" (grind) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (skeep)
      (("2" (induct "n")
        (("1" (postpone) nil nil) ("2" (postpone) nil nil)) nil))
      nil))
    nil)
   nil shostak))
 (bubblesort_equiv 0
  (bubblesort_equiv-1 nil 3782582192
   ("" (induct "l")
    (("1" (expand "bubblesort")
      (("1" (expand "bubblesort_count") (("1" (propax) nil nil)) nil))
      nil)
     ("2" (skeep)
      (("2" (lemma "bubblesort_aux_equiv")
        (("2" (expand "bubblesort")
          (("2" (expand "bubblesort_count")
            (("2" (lift-if)
              (("2" (prop)
                (("1"
                  (inst -2 "cons(cons1_var, cons2_var)"
                   "list2finseq(cons(cons1_var, cons2_var))`length - 1"
                   "0")
                  (("1" (grind) nil nil)) nil)
                 ("2"
                  (inst -2 "cons(cons1_var, cons2_var)"
                   "list2finseq(cons(cons1_var, cons2_var))`length - 1"
                   "0")
                  (("2" (grind) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (cons? adt-recognizer-decl "[list -> boolean]" list_adt nil)
    (cons adt-constructor-decl "[[T, list] -> (cons?)]" list_adt nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil nat_types nil)
    (finseq type-eq-decl nil finite_sequences nil)
    (list2finseq const-decl "finseq[T]" list2finseq nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    nil nil
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (length def-decl "nat" list_props nil)
    (bubblesort_aux_equiv formula-decl nil bubblesort nil)
    (list_induction formula-decl nil list_adt nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (bubblesort_count const-decl "[list[nat], nat]" bubblesort nil)
    (bubblesort const-decl "list[nat]" bubblesort nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil) nil
    (PRED type-eq-decl nil defined_types nil)
    (list type-decl nil list_adt nil))
   shostak)))

